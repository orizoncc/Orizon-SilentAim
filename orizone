getgenv().Silent = {
    Setting = {
        IsTargetting = true,
        Prediction = 0.135,
        TargetPart = "HumanoidRootPart",
        WallCheck = true,
        FOV = {
            Radius = 70,
            Visible = true
        }
    }
}

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local CoreGui = game:GetService("CoreGui")
local StarterGui = game:GetService("StarterGui")
local Camera = workspace.CurrentCamera

local FOV = Drawing.new("Circle")
FOV.Transparency = 0.5
FOV.Thickness = 1.6
FOV.Color = Color3.fromRGB(255, 255, 255)
FOV.Filled = false

local function UpdateFOV(Radius)
    if not FOV then return end
    local Inset = GuiService:GetGuiInset().Y
    local MousePosition = Vector2.new(
        game.Players.LocalPlayer:GetMouse().X, 
        game.Players.LocalPlayer:GetMouse().Y + Inset
    )
    FOV.Position = MousePosition
    FOV.Visible = getgenv().Silent.Setting.FOV.Visible
    FOV.Radius = Radius * 3.067
end

RunService.RenderStepped:Connect(function()
    UpdateFOV(getgenv().Silent.Setting.FOV.Radius)
end)

local function Notification(message)
    StarterGui:SetCore("SendNotification", {
        Title = "Silent Aim",
        Text = message,
        Duration = 3
    })
end

Notification("Toggle FOV: /fovon | /fovoff")

local function WallCheck(destination, ignore)
    if getgenv().Silent.Setting.WallCheck then
        local Origin = Camera.CFrame.Position
        local CheckRay = Ray.new(Origin, destination - Origin)
        local Hit = workspace:FindPartOnRayWithIgnoreList(CheckRay, ignore)
        return Hit == nil
    else
        return true
    end
end

local function getClosestChar()
    local Target, Closest = nil, 1 / 0
    local FOVPosition = FOV.Position

    for _, v in pairs(game.Players:GetPlayers()) do
        if v.Character and v ~= game.Players.LocalPlayer and v.Character:FindFirstChild(getgenv().Silent.Setting.TargetPart) then
            local Position, OnScreen = Camera:WorldToScreenPoint(v.Character[getgenv().Silent.Setting.TargetPart].Position)
            local Distance = (Vector2.new(Position.X, Position.Y) - FOVPosition).Magnitude

            if FOV.Radius > Distance and Distance < Closest and OnScreen and WallCheck(v.Character[getgenv().Silent.Setting.TargetPart].Position, {game.Players.LocalPlayer, v.Character}) then
                Closest = Distance
                Target = v
            end
        end
    end
    return Target
end

local Old
Old = hookmetamethod(game, "__index", function(self, key)
    if self:IsA("Mouse") and key == "Hit" then
        local Targetting = getClosestChar()
        if Targetting then
            return Targetting.Character[getgenv().Silent.Setting.TargetPart].CFrame +
                (Targetting.Character[getgenv().Silent.Setting.TargetPart].Velocity * getgenv().Silent.Setting.Prediction)
        end
    end
    return Old(self, key)
end)

game:GetService("Players").LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "/fovon" and not getgenv().Silent.Setting.FOV.Visible then
        getgenv().Silent.Setting.FOV.Visible = true
        Notification("FOV Enabled")
    elseif message:lower() == "/fovoff" and getgenv().Silent.Setting.FOV.Visible then
        getgenv().Silent.Setting.FOV.Visible = false
        Notification("FOV Disabled")
    end
end)

game:BindToClose(function()
    if FOV then FOV:Remove() end
end)
